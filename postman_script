const responseJson = pm.response.json();

setInterval(() => {}, 5000);

function GetImageFile(Download_URL){
    let opts = {
        url: Download_URL,
        filepath: 'C:\\image\\' + responseJson.info.guillotine_no + '\\'
    };

    pm.sendRequest({
        url: 'http://localhost:3000/download',
        method: 'POST',
        header: 'Content-Type:application/json',
        body: {
            mode: 'raw',
            raw: JSON.stringify(opts)
        }
    }, function (err, res) {
        console.log(res);
    });
}

function GetScreenShotRead(idx){
    return new Promise((resolve, reject) => {
        pm.sendRequest({
            url: 'https://barracks.sa.nexon.com/api/Guillotine/GetScreenShotRead/' + responseJson.match_list[idx].user_nexon_sn + '/' + responseJson.match_list[idx].match_key + '/' + responseJson.info.x_user_nexon_sn,
            method: 'POST'
        }, function(err, res){
            if (err){
                pm.test("responseJson.match_list[i].match_key : err" + err);
                return reject(err);
            }else{
                var gif_responseJson = res.json();

                var j = 0;
                while (j < gif_responseJson.count){
                    if (gif_responseJson.list[j].extension == ".gif"){
                        GetImageFile(gif_responseJson.list[j].img_thumb);
                        GetImageFile(gif_responseJson.list[j].img_url);
                    }

                    j++;
                }

                return resolve(res);
            }
        });
    });
}

(async function main(){
    if (responseJson.info.guillotine_no != null){
        pm.test("Guillotine in progress");

        pm.test("match list count : " + responseJson.count_info.match_list_count);

        var i = 0;
        while (i < responseJson.count_info.match_list_count){
            if (responseJson.match_list[i].screenshot_flag == true){
                pm.test("match - " + responseJson.match_list[i].match_key + " : Screenshot");

                await GetScreenShotRead(i);
            }else{
                pm.test("match - " + responseJson.match_list[i].match_key + " : Normal");
            }

            i++;
        }
    }else{
        pm.test("Guillotine not found");
    }
})();
